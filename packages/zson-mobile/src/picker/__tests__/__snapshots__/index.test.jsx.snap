// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Picker Picker render visible 1`] = `
<ForwardRef(forwardRef)
  dataSource={
    Array [
      Object {
        "label": "选项一",
        "value": "1",
      },
      Object {
        "label": "选项二",
        "value": "2",
      },
    ]
  }
  prefixCls="zs-picker"
  visible={true}
>
  <ConfigReceiver
    dataSource={
      Array [
        Object {
          "label": "选项一",
          "value": "1",
        },
        Object {
          "label": "选项二",
          "value": "2",
        },
      ]
    }
    forwardedRef={null}
    prefixCls="zs-picker"
    visible={true}
  >
    <Picker
      cols={Infinity}
      dataSource={
        Array [
          Object {
            "label": "选项一",
            "value": "1",
          },
          Object {
            "label": "选项二",
            "value": "2",
          },
        ]
      }
      destroy={false}
      itemRender={[Function]}
      locale={
        Object {
          "cancelText": "取消",
          "okText": "确定",
          "title": "请选择",
        }
      }
      localeCode="zh-CN"
      maskClosable={true}
      prefixCls="zs-picker"
      valueMember="value"
      visible={true}
    >
      <ForwardRef(ForwardedRefComp)
        destroy={false}
        onMaskClick={[Function]}
        visible={true}
      >
        <WarnIfDeprecatedComp
          destroy={false}
          forwardedRef={null}
          onMaskClick={[Function]}
          visible={true}
        >
          <Popup
            destroy={false}
            onMaskClick={[Function]}
            prefixCls="zs-popup"
            visible={true}
          >
            <Portal
              animationDuration={200}
              animationType="fade"
              destroy={false}
              direction="bottom"
              handlePortalUnmount={[Function]}
              mask={true}
              maskType="normal"
              onMaskClick={[Function]}
              prefixCls="zs-popup"
              visible={true}
            >
              <Trigger
                disabled={false}
                onClose={[Function]}
                visible={true}
              >
                <Portal
                  containerInfo={
                    <div
                      class="zs-popup-container"
                    >
                      <div
                        class="zs-mask zs-fade-enter zs-mask--normal"
                        style="animation-duration: 200ms;"
                      />
                      <div
                        class="zs-popup__wrapper"
                        data-width="0"
                        role="dialog"
                      >
                        <div
                          class="zs-popup zs-popup--bottom zs-popup--show"
                          data-width="0"
                          role="document"
                          style="transition-duration: 200ms; transition-property: transform;"
                        >
                          <div
                            class="zs-picker"
                          >
                            <div
                              class="zs-picker__header"
                            >
                              <div
                                class="zs-picker__cancel"
                              >
                                取消
                              </div>
                              <div
                                class="zs-picker__title"
                              >
                                请选择
                              </div>
                              <div
                                class="zs-picker__submit"
                              >
                                确定
                              </div>
                            </div>
                            <div
                              class="zs-picker-view"
                            >
                              <div
                                class="zs-picker-view__content"
                              >
                                <div
                                  class="zs-wheel"
                                >
                                  <div
                                    class="zs-wheel__content"
                                    style="transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1); transition-property: transform; transition-duration: 800ms; transform: translateX(0px) translateY(NaNpx);"
                                  >
                                    <div
                                      class="zs-wheel__item zs-wheel__item--selected"
                                      style="transform: rotateX(NaNdeg); transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1); transition-duration: 800ms; pointer-events: none;"
                                    >
                                      选项一
                                    </div>
                                    <div
                                      class="zs-wheel__item"
                                      style="transform: rotateX(NaNdeg); transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1); transition-duration: 800ms; pointer-events: none;"
                                    >
                                      选项二
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <div
                                class="zs-picker-view__mask zs-picker-view__mask--top"
                              />
                              <div
                                class="zs-picker-view__mask zs-picker-view__mask--bottom"
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  }
                >
                  <Mask
                    className="zs-fade-enter"
                    prefixCls="zs-mask"
                    style={
                      Object {
                        "WebkitAnimationDuration": "200ms",
                        "animationDuration": "200ms",
                      }
                    }
                    type="normal"
                    visible={true}
                  >
                    <div
                      className="zs-mask zs-fade-enter zs-mask--normal"
                      style={
                        Object {
                          "WebkitAnimationDuration": "200ms",
                          "animationDuration": "200ms",
                        }
                      }
                    />
                  </Mask>
                  <div
                    className="zs-popup__wrapper"
                    data-width={0}
                    onClick={[Function]}
                    role="dialog"
                    style={Object {}}
                  >
                    <div
                      className="zs-popup zs-popup--bottom"
                      data-width={0}
                      role="document"
                      style={
                        Object {
                          "WebkitTransitionDuration": "200ms",
                          "WebkitTransitionProperty": "transform",
                          "transitionDuration": "200ms",
                          "transitionProperty": "transform",
                        }
                      }
                    >
                      <div
                        className="zs-picker"
                        onClick={[Function]}
                      >
                        <div
                          className="zs-picker__header"
                        >
                          <div
                            className="zs-picker__cancel"
                            onClick={[Function]}
                          >
                            取消
                          </div>
                          <div
                            className="zs-picker__title"
                          >
                            请选择
                          </div>
                          <div
                            className="zs-picker__submit"
                            onClick={[Function]}
                          >
                            确定
                          </div>
                        </div>
                        <PickerView
                          cols={Infinity}
                          dataSource={
                            Array [
                              Object {
                                "label": "选项一",
                                "value": "1",
                              },
                              Object {
                                "label": "选项二",
                                "value": "2",
                              },
                            ]
                          }
                          disabled={false}
                          itemRender={[Function]}
                          localeCode="zh-CN"
                          onChange={[Function]}
                          prefixCls="zs-picker-view"
                          stopScroll={false}
                          value={
                            Array [
                              "1",
                            ]
                          }
                          valueMember="value"
                        >
                          <div
                            className="zs-picker-view"
                          >
                            <div
                              className="zs-picker-view__content"
                            >
                              <Wheel
                                dataSource={
                                  Array [
                                    Object {
                                      "label": "选项一",
                                      "value": "1",
                                    },
                                    Object {
                                      "label": "选项二",
                                      "value": "2",
                                    },
                                  ]
                                }
                                disabled={false}
                                itemRender={[Function]}
                                key="0"
                                onChange={[Function]}
                                prefixCls="zs-wheel"
                                stopScroll={false}
                                value="1"
                                valueMember="value"
                              >
                                <div
                                  className="zs-wheel"
                                >
                                  <div
                                    className="zs-wheel__content"
                                  >
                                    <div
                                      className="zs-wheel__item zs-wheel__item--selected"
                                      key="0"
                                    >
                                      选项一
                                    </div>
                                    <div
                                      className="zs-wheel__item"
                                      key="1"
                                    >
                                      选项二
                                    </div>
                                  </div>
                                </div>
                              </Wheel>
                            </div>
                            <div
                              className="zs-picker-view__mask zs-picker-view__mask--top"
                            />
                            <div
                              className="zs-picker-view__mask zs-picker-view__mask--bottom"
                            />
                          </div>
                        </PickerView>
                      </div>
                    </div>
                  </div>
                </Portal>
              </Trigger>
            </Portal>
          </Popup>
        </WarnIfDeprecatedComp>
      </ForwardRef(ForwardedRefComp)>
    </Picker>
  </ConfigReceiver>
</ForwardRef(forwardRef)>
`;

exports[`Picker render custom label 1`] = `
<ForwardRef(forwardRef)
  dataSource={
    Array [
      Object {
        "children": Array [
          Object {
            "code": "11",
            "name": "海淀区",
          },
          Object {
            "code": "12",
            "name": "西城区",
          },
        ],
        "code": "1",
        "name": "北京市",
      },
      Object {
        "children": Array [
          Object {
            "code": "21",
            "name": "黄埔区",
          },
          Object {
            "code": "22",
            "name": "虹口区",
          },
        ],
        "code": "2",
        "name": "上海市",
      },
    ]
  }
  itemRender={[Function]}
  valueMember="code"
>
  <ConfigReceiver
    dataSource={
      Array [
        Object {
          "children": Array [
            Object {
              "code": "11",
              "name": "海淀区",
            },
            Object {
              "code": "12",
              "name": "西城区",
            },
          ],
          "code": "1",
          "name": "北京市",
        },
        Object {
          "children": Array [
            Object {
              "code": "21",
              "name": "黄埔区",
            },
            Object {
              "code": "22",
              "name": "虹口区",
            },
          ],
          "code": "2",
          "name": "上海市",
        },
      ]
    }
    forwardedRef={null}
    itemRender={[Function]}
    valueMember="code"
  >
    <Picker
      cols={Infinity}
      dataSource={
        Array [
          Object {
            "children": Array [
              Object {
                "code": "11",
                "name": "海淀区",
              },
              Object {
                "code": "12",
                "name": "西城区",
              },
            ],
            "code": "1",
            "name": "北京市",
          },
          Object {
            "children": Array [
              Object {
                "code": "21",
                "name": "黄埔区",
              },
              Object {
                "code": "22",
                "name": "虹口区",
              },
            ],
            "code": "2",
            "name": "上海市",
          },
        ]
      }
      destroy={false}
      itemRender={[Function]}
      locale={
        Object {
          "cancelText": "取消",
          "okText": "确定",
          "title": "请选择",
        }
      }
      localeCode="zh-CN"
      maskClosable={true}
      prefixCls="zs-picker"
      valueMember="code"
    >
      <ForwardRef(ForwardedRefComp)
        destroy={false}
        onMaskClick={[Function]}
      >
        <WarnIfDeprecatedComp
          destroy={false}
          forwardedRef={null}
          onMaskClick={[Function]}
        >
          <Popup
            destroy={false}
            onMaskClick={[Function]}
            prefixCls="zs-popup"
            visible={false}
          />
        </WarnIfDeprecatedComp>
      </ForwardRef(ForwardedRefComp)>
    </Picker>
  </ConfigReceiver>
</ForwardRef(forwardRef)>
`;
