(self.webpackChunksite=self.webpackChunksite||[]).push([[1216],{21216:function(n,r,e){"use strict";e.r(r),r.default="# StackPicker 层叠选择器\r\n\r\n## 基本用法\r\n\r\n```jsx\r\nimport { useState } from 'react';\r\nimport { StackPicker, Cell, Button } from 'zson-mobile';\r\n\r\nconst Demo = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [value, setValue] = useState([]);\r\n\r\n  const District = [\r\n    {\r\n      value: '340000',\r\n      label: '安徽省',\r\n      children: [\r\n        {\r\n          value: '340800',\r\n          label: '安庆市',\r\n          children: [\r\n            {\r\n              value: '340803',\r\n              label: '大观区',\r\n              children: [],\r\n            },\r\n            {\r\n              value: '340822',\r\n              label: '怀宁县',\r\n              children: [],\r\n            },\r\n            {\r\n              value: '340882',\r\n              label: '其它区',\r\n              children: [],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      value: '310000',\r\n      label: '上海',\r\n      children: [\r\n        {\r\n          value: '310100',\r\n          label: '上海市',\r\n          children: [\r\n            {\r\n              value: '310113',\r\n              label: '宝山区',\r\n              children: [],\r\n            },\r\n            {\r\n              value: '310105',\r\n              label: '长宁区',\r\n              children: [],\r\n            },\r\n            {\r\n              value: '310230',\r\n              label: '崇明县',\r\n              children: [],\r\n            },\r\n            {\r\n              value: '310152',\r\n              label: '川沙区',\r\n              children: [],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Cell\r\n        title=\"普通\"\r\n        description={\r\n          <Button size=\"xs\" onClick={() => setVisible(true)}>\r\n            选择\r\n          </Button>\r\n        }\r\n      >\r\n        {value.join(',')}\r\n      </Cell>\r\n\r\n      <StackPicker\r\n        maskClosable\r\n        visible={visible}\r\n        value={value}\r\n        title=\"层叠选择器\"\r\n        dataSource={District}\r\n        onChange={(value) => {\r\n          console.log('onChange', value);\r\n        }}\r\n        onOk={(value) => {\r\n          console.log('onOk', value);\r\n          setValue(value);\r\n          setVisible(false);\r\n        }}\r\n        onCancel={() => {\r\n          console.log('onCancel');\r\n          setVisible(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Demo />, mountNode);\r\n```\r\n\r\n## API\r\n\r\n| 属性          | 类型                                                                      | 默认值                                       | 说明                                           |\r\n| :------------ | :------------------------------------------------------------------------ | :------------------------------------------- | :--------------------------------------------- |\r\n| visible       | boolean                                                                   | false                                        | 是否展示                                       |\r\n| dataSource    | object[]                                                                  | []                                           | 数据源                                         |\r\n| defaultValue  | string \\| number \\| boolean \\| Array<string &#124; number &#124; boolean> | -                                            | 初始值                                         |\r\n| value         | string \\| number \\| boolean \\| Array<string &#124; number &#124; boolean> | -                                            | 值                                             |\r\n| displayMember | string                                                                    | 'label'                                      | 键字段对应的 key                               |\r\n| valueMember   | string                                                                    | 'value'                                      | 值字段对应的 key                               |\r\n| displayRender | (selected?: object) => string                                             | selected => selected.map(item => item.label) | 所选值的展示                                   |\r\n| itemRender    | (data?: object) => data.label                                             | (data?: object) => data.label                | 单个选项的展示                                 |\r\n| title         | string                                                                    | '请选择'                                     | 选择器标题                                     |\r\n| okText        | string                                                                    | '确定'                                       | 确定栏文字                                     |\r\n| cancelText    | string                                                                    | '取消'                                       | 取消栏文字                                     |\r\n| maskClosable  | boolean                                                                   | true                                         | 是否点击遮罩层时关闭，需要和 onCancel 一起使用 |\r\n| onChange      | (selected?: object) => {label, value}[]                                   | -                                            | 值变化时触发的回调函数                         |\r\n| onOk          | (selected?: object) => value[]                                            | -                                            | 点击确定时触发的回调函数                       |\r\n| onCancel      | () => void                                                                | -                                            | 点击取消时触发的回调函数                       |\r\n"}}]);