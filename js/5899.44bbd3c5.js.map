{"version":3,"sources":["webpack://site/../zson-mobile/src/popup/demo.md"],"names":[],"mappings":"0GAAA","file":"js/5899.44bbd3c5.js","sourcesContent":["export default \"# Popup 弹出框\\r\\n\\r\\n## 基本用法\\r\\n\\r\\n```jsx\\r\\nimport { useState, useReducer, useRef } from 'react';\\r\\nimport { Popup, Cell, Button, Picker, Toast } from 'zson-mobile';\\r\\n\\r\\nconst SINGLE_DATA = [\\r\\n  { value: '1', label: '选项一' },\\r\\n  { value: '2', label: '选项二' },\\r\\n];\\r\\n\\r\\nconst initVisibleState = {\\r\\n  popBottom: false,\\r\\n  popTop: false,\\r\\n  popLeft: false,\\r\\n  popRight: false,\\r\\n  picker: false,\\r\\n  popSpec: false,\\r\\n  popCenterSpec: false,\\r\\n};\\r\\n\\r\\nconst Demo = () => {\\r\\n  const popupRef = useRef();\\r\\n  const [value, setValue] = useState('');\\r\\n  const [visible, setVisible] = useReducer((state, action) => {\\r\\n    const { type } = action;\\r\\n    return {\\r\\n      ...state,\\r\\n      [type]: !state[type],\\r\\n    };\\r\\n  }, initVisibleState);\\r\\n\\r\\n  const toggle = (type) => setVisible({ type });\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      <Cell\\r\\n        description={\\r\\n          <Button\\r\\n            size=\\\"xs\\\"\\r\\n            onClick={() => {\\r\\n              toggle('popTop');\\r\\n\\r\\n              setTimeout(() => {\\r\\n                toggle('popTop');\\r\\n              }, 3000);\\r\\n            }}\\r\\n          >\\r\\n            开启\\r\\n          </Button>\\r\\n        }\\r\\n      >\\r\\n        从上方弹出\\r\\n      </Cell>\\r\\n\\r\\n      <Cell\\r\\n        description={\\r\\n          <Button size=\\\"xs\\\" onClick={() => toggle('popBottom')}>\\r\\n            开启\\r\\n          </Button>\\r\\n        }\\r\\n      >\\r\\n        从下方弹出\\r\\n      </Cell>\\r\\n\\r\\n      <Cell\\r\\n        description={\\r\\n          <Button size=\\\"xs\\\" onClick={() => toggle('popLeft')}>\\r\\n            开启\\r\\n          </Button>\\r\\n        }\\r\\n      >\\r\\n        从左侧弹出\\r\\n      </Cell>\\r\\n\\r\\n      <Cell\\r\\n        description={\\r\\n          <Button size=\\\"xs\\\" onClick={() => toggle('popRight')}>\\r\\n            开启\\r\\n          </Button>\\r\\n        }\\r\\n      >\\r\\n        从右侧弹出\\r\\n      </Cell>\\r\\n\\r\\n      <Cell\\r\\n        description={\\r\\n          <Button size=\\\"xs\\\" onClick={() => toggle('popCenter')}>\\r\\n            开启\\r\\n          </Button>\\r\\n        }\\r\\n      >\\r\\n        从中间弹出\\r\\n      </Cell>\\r\\n\\r\\n      <Cell\\r\\n        description={\\r\\n          <Button size=\\\"xs\\\" onClick={() => toggle('popSpec')}>\\r\\n            开启\\r\\n          </Button>\\r\\n        }\\r\\n      >\\r\\n        自定义挂载节点\\r\\n      </Cell>\\r\\n\\r\\n      <Popup\\r\\n        visible={visible.popTop}\\r\\n        direction=\\\"top\\\"\\r\\n        mask={false}\\r\\n        afterClose={() => console.log('关闭')}\\r\\n      >\\r\\n        <div className=\\\"popup-box-top\\\">更新成功</div>\\r\\n      </Popup>\\r\\n\\r\\n      <Popup\\r\\n        visible={visible.popBottom}\\r\\n        direction=\\\"bottom\\\"\\r\\n        onMaskClick={() => toggle('popBottom')}\\r\\n        afterOpen={() => console.log('打开')}\\r\\n        afterClose={() => console.log('关闭')}\\r\\n        destroy={false}\\r\\n        mountContainer={() => document.body}\\r\\n      >\\r\\n        <div className=\\\"popup-box\\\">\\r\\n          <Button size=\\\"xs\\\" onClick={() => toggle('picker')}>\\r\\n            打开Picker\\r\\n          </Button>\\r\\n        </div>\\r\\n      </Popup>\\r\\n\\r\\n      <Picker\\r\\n        visible={visible.picker}\\r\\n        value={value}\\r\\n        dataSource={SINGLE_DATA}\\r\\n        onOk={(selected) => {\\r\\n          console.log('Picker onOk: ', selected);\\r\\n          Toast.show(JSON.stringify(selected));\\r\\n          setValue(selected.map((item) => item.value));\\r\\n          toggle('picker');\\r\\n        }}\\r\\n        onCancel={() => toggle('picker')}\\r\\n      />\\r\\n\\r\\n      <Popup\\r\\n        visible={visible.popLeft}\\r\\n        onMaskClick={() => toggle('popLeft')}\\r\\n        direction=\\\"left\\\"\\r\\n        afterClose={() => console.log('关闭')}\\r\\n      >\\r\\n        <div className=\\\"popup-box-left\\\">\\r\\n          <Button size=\\\"xs\\\" onClick={() => toggle('popLeft')}>\\r\\n            关闭弹层\\r\\n          </Button>\\r\\n        </div>\\r\\n      </Popup>\\r\\n\\r\\n      <Popup\\r\\n        visible={visible.popRight}\\r\\n        onMaskClick={() => toggle('popRight')}\\r\\n        direction=\\\"right\\\"\\r\\n        afterClose={() => console.log('关闭')}\\r\\n      >\\r\\n        <div className=\\\"popup-box-right\\\">\\r\\n          <Button size=\\\"xs\\\" onClick={() => toggle('popRight')}>\\r\\n            关闭弹层\\r\\n          </Button>\\r\\n        </div>\\r\\n      </Popup>\\r\\n\\r\\n      <Popup\\r\\n        visible={visible.popCenter}\\r\\n        direction=\\\"center\\\"\\r\\n        width=\\\"70%\\\"\\r\\n        afterClose={() => console.log('关闭')}\\r\\n      >\\r\\n        <div className=\\\"popup-box\\\">\\r\\n          <Button size=\\\"xs\\\" onClick={() => toggle('popCenter')}>\\r\\n            关闭弹层\\r\\n          </Button>\\r\\n        </div>\\r\\n      </Popup>\\r\\n\\r\\n      <Popup\\r\\n        visible={visible.popCenterSpec}\\r\\n        direction=\\\"center\\\"\\r\\n        width=\\\"70%\\\"\\r\\n        afterClose={() => console.log('关闭')}\\r\\n        onEsc={() => {\\r\\n          toggle('popCenterSpec');\\r\\n        }}\\r\\n        mountContainer={() => {\\r\\n          return popupRef.current.portalRef.popup;\\r\\n        }}\\r\\n      >\\r\\n        <div className=\\\"popup-box\\\">\\r\\n          <Button size=\\\"xs\\\" onClick={() => toggle('popCenterSpec')}>\\r\\n            关闭弹层\\r\\n          </Button>\\r\\n        </div>\\r\\n      </Popup>\\r\\n\\r\\n      <Popup\\r\\n        visible={visible.popSpec}\\r\\n        onMaskClick={() => {\\r\\n          if (visible.popCenterSpec) {\\r\\n            toggle('popCenterSpec');\\r\\n          }\\r\\n          toggle('popSpec');\\r\\n        }}\\r\\n        afterClose={() => console.log('关闭')}\\r\\n        onEsc={() => {\\r\\n          toggle('popSpec');\\r\\n        }}\\r\\n        ref={popupRef}\\r\\n        destroy={true}\\r\\n      >\\r\\n        <div className=\\\"popup-box-bottom\\\">\\r\\n          <Button size=\\\"xs\\\" onClick={() => toggle('popCenterSpec')}>\\r\\n            打开弹层\\r\\n          </Button>\\r\\n          <p>打开的modal挂载此popup上</p>\\r\\n        </div>\\r\\n      </Popup>\\r\\n    </>\\r\\n  );\\r\\n};\\r\\n\\r\\nReactDOM.render(<Demo />, mountNode);\\r\\n```\\r\\n\\r\\n## API\\r\\n\\r\\n| 属性              | 类型                                 | 默认值        | 说明                                                                                                                                                                                                    |\\r\\n| :---------------- | :----------------------------------- | :------------ | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\\r\\n| visible           | boolean                              | false         | 是否显示                                                                                                                                                                                                |\\r\\n| direction         | string                               | 'bottom'      | 弹出方向，可选值 `top`, `bottom`, `left`, `right`, `center`                                                                                                                                             |\\r\\n| animationType     | string                               | 'fade'        | 当弹出方向为中间位置（direction=\\\"center\\\"）时的动画效果，可选值 `fade`, `door`, `flip`, `rotate`, `zoom`,`moveUp`, `moveDown`, `moveLeft`, `moveRight`,`slideUp`, `slideDown`, `slideLeft`, `slideRight` |\\r\\n| animationDuration | number                               | 200           | 动画执行时间（单位：毫秒）                                                                                                                                                                              |\\r\\n| width             | string &#124; number                 | -             | 弹层宽度                                                                                                                                                                                                |\\r\\n| mask              | boolean                              | true          | 是否展示遮罩层                                                                                                                                                                                          |\\r\\n| maskType          | string                               | 'normal'      | 遮罩层的类型，可选值 `transparent`, `normal`                                                                                                                                                            |\\r\\n| destroy           | boolean                              | true          | 弹层关闭后是否移除节点                                                                                                                                                                                  |\\r\\n| afterOpen         | () => void                           | -             | 弹层展示后的回调                                                                                                                                                                                        |\\r\\n| afterClose        | () => void                           | -             | 弹层关闭后的回调                                                                                                                                                                                        |\\r\\n| onMaskClick       | () => void                           | -             | 点击遮罩层时触发的回调函数                                                                                                                                                                              |\\r\\n| onEsc             | () => void                           | -             | 点击 Esc 键时触发的回调函数                                                                                                                                                                             |\\r\\n| mountContainer    | HTMLElement &#124; () => HTMLElement | document.body | 指定 Popup 挂载的 HTML 节点                                                                                                                                                                             |\\r\\n\";"],"sourceRoot":""}