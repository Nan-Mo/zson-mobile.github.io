{"version":3,"sources":["webpack://site/../zson-mobile/src/date-picker/demo.md"],"names":[],"mappings":"0GAAA","file":"js/3259.b3863b81.js","sourcesContent":["export default \"# DatePicker 日期选择器\\r\\n\\r\\n## 基本用法\\r\\n\\r\\n```jsx\\r\\nimport { useRef, useReducer } from 'react';\\r\\nimport { Cell, Button, DatePicker, Toast } from 'zson-mobile';\\r\\n\\r\\nconst initState = {\\r\\n  date: {\\r\\n    visible: false,\\r\\n    value: '',\\r\\n    wheelDefaultValue: '2018-09-13',\\r\\n  },\\r\\n  time: {\\r\\n    visible: false,\\r\\n    value: '',\\r\\n  },\\r\\n  limitDate: {\\r\\n    visible: false,\\r\\n    value: '2017-09-13',\\r\\n  },\\r\\n  specDOM: {\\r\\n    visible: false,\\r\\n    value: '',\\r\\n  },\\r\\n};\\r\\n\\r\\nconst reducer = (state, action) => {\\r\\n  const { type, key, value } = action;\\r\\n\\r\\n  switch (type) {\\r\\n    case 'visible':\\r\\n      return {\\r\\n        ...state,\\r\\n        [key]: {\\r\\n          ...state[key],\\r\\n          visible: !state[key].visible,\\r\\n        },\\r\\n      };\\r\\n\\r\\n    case 'value':\\r\\n      return {\\r\\n        ...state,\\r\\n        [key]: {\\r\\n          ...state[key],\\r\\n          value,\\r\\n        },\\r\\n      };\\r\\n\\r\\n    default:\\r\\n  }\\r\\n};\\r\\n\\r\\nconst Demo = () => {\\r\\n  const myRef = useRef();\\r\\n  const [state, dispatch] = useReducer(reducer, initState);\\r\\n\\r\\n  const setValue = (key, value) => {\\r\\n    dispatch({ type: 'value', key, value });\\r\\n  };\\r\\n\\r\\n  const toggle = (key) => {\\r\\n    dispatch({\\r\\n      type: 'visible',\\r\\n      key,\\r\\n    });\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Cell\\r\\n        description={\\r\\n          <Button size=\\\"xs\\\" onClick={() => toggle('date')}>\\r\\n            选择\\r\\n          </Button>\\r\\n        }\\r\\n      >\\r\\n        选择日期\\r\\n      </Cell>\\r\\n\\r\\n      <Cell\\r\\n        description={\\r\\n          <Button size=\\\"xs\\\" onClick={() => toggle('time')}>\\r\\n            选择\\r\\n          </Button>\\r\\n        }\\r\\n      >\\r\\n        选择时间\\r\\n      </Cell>\\r\\n\\r\\n      <Cell\\r\\n        description={\\r\\n          <Button size=\\\"xs\\\" onClick={() => toggle('limitDate')}>\\r\\n            选择\\r\\n          </Button>\\r\\n        }\\r\\n      >\\r\\n        选择日期(自定义)\\r\\n      </Cell>\\r\\n\\r\\n      <Cell\\r\\n        description={\\r\\n          <Button size=\\\"xs\\\" onClick={() => toggle('specDOM')}>\\r\\n            选择\\r\\n          </Button>\\r\\n        }\\r\\n      >\\r\\n        挂载到指定dom节点\\r\\n      </Cell>\\r\\n\\r\\n      <DatePicker\\r\\n        visible={state.date.visible}\\r\\n        mode=\\\"date\\\"\\r\\n        value={state.date.value}\\r\\n        wheelDefaultValue={state.date.wheelDefaultValue}\\r\\n        onOk={(value) => {\\r\\n          setValue('date', value);\\r\\n          toggle('date');\\r\\n          Toast.show(JSON.stringify(value));\\r\\n        }}\\r\\n        onCancel={() => toggle('date')}\\r\\n      />\\r\\n\\r\\n      <DatePicker\\r\\n        visible={state.time.visible}\\r\\n        mode=\\\"time\\\"\\r\\n        value={state.time.value}\\r\\n        onOk={(value) => {\\r\\n          setValue('time', value);\\r\\n          toggle('time');\\r\\n          Toast.show(JSON.stringify(value));\\r\\n        }}\\r\\n        onCancel={() => toggle('time')}\\r\\n      />\\r\\n\\r\\n      <DatePicker\\r\\n        visible={state.limitDate.visible}\\r\\n        title=\\\"选择日期\\\"\\r\\n        okText=\\\"确定\\\"\\r\\n        cancelText=\\\"取消\\\"\\r\\n        mode=\\\"date\\\"\\r\\n        min=\\\"2007-01-03\\\"\\r\\n        max=\\\"2019-11-23\\\"\\r\\n        value={state.limitDate.value}\\r\\n        onOk={(value) => {\\r\\n          setValue('limitDate', value);\\r\\n          toggle('limitDate');\\r\\n          Toast.show(JSON.stringify(value));\\r\\n        }}\\r\\n        onCancel={() => toggle('limitDate')}\\r\\n      />\\r\\n\\r\\n      <DatePicker\\r\\n        visible={state.specDOM.visible}\\r\\n        value={state.specDOM.value}\\r\\n        onOk={(value) => {\\r\\n          setValue('specDOM', value);\\r\\n          toggle('specDOM');\\r\\n          Toast.show(JSON.stringify(value));\\r\\n        }}\\r\\n        onCancel={() => toggle('specDOM')}\\r\\n        getContainer={() => myRef.current}\\r\\n      />\\r\\n\\r\\n      <div ref={myRef} id=\\\"test-div\\\" style={{ position: 'relative', zIndex: 1 }} />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nReactDOM.render(<Demo />, mountNode);\\r\\n```\\r\\n\\r\\n## DateSelect 表单日期选择器\\r\\n\\r\\n```jsx\\r\\nimport { useState } from 'react';\\r\\nimport { Cell, DateSelect } from 'zson-mobile';\\r\\n\\r\\nconst Demo = () => {\\r\\n  const [value, setValue] = useState('');\\r\\n\\r\\n  return (\\r\\n    <Cell title=\\\"日期选择\\\">\\r\\n      <DateSelect\\r\\n        className=\\\"test-dateSelect\\\"\\r\\n        title=\\\"选择日期\\\"\\r\\n        placeholder=\\\"请选择日期\\\"\\r\\n        mode=\\\"date\\\"\\r\\n        min=\\\"1974-05-16\\\"\\r\\n        max=\\\"2027-05-15\\\"\\r\\n        value={value}\\r\\n        onOk={(value) => {\\r\\n          console.log('DateSelect onOk: ', value);\\r\\n          setValue(value);\\r\\n        }}\\r\\n      />\\r\\n    </Cell>\\r\\n  );\\r\\n};\\r\\n\\r\\nReactDOM.render(<Demo />, mountNode);\\r\\n```\\r\\n\\r\\n## DatePickerView 平铺选择器\\r\\n\\r\\n```jsx\\r\\nimport { useState } from 'react';\\r\\nimport { DatePickerView } from 'zson-mobile';\\r\\n\\r\\nconst Demo = () => {\\r\\n  const [value, setValue] = useState('');\\r\\n\\r\\n  return (\\r\\n    <DatePickerView\\r\\n      mode=\\\"datetime\\\"\\r\\n      value={value}\\r\\n      min=\\\"2018-1-13\\\"\\r\\n      onChange={(value) => {\\r\\n        console.log('datePickerView => ', value);\\r\\n        setValue(value);\\r\\n      }}\\r\\n    />\\r\\n  );\\r\\n};\\r\\n\\r\\nReactDOM.render(<Demo />, mountNode);\\r\\n```\\r\\n\\r\\n## API\\r\\n\\r\\n| 属性         | 类型                   | 默认值 | 说明                                                                 |\\r\\n| :----------- | :--------------------- | :----- | :------------------------------------------------------------------- |\\r\\n| value        | string \\\\| Date         | -      | 值                                                                   |\\r\\n| defaultValue | string \\\\| Date         | -      | 初始值                                                               |\\r\\n| mode         | string                 | 'date' | 指定日期选择模式，可选项 `year`, `month`, `date`, `time`, `datetime` |\\r\\n| min          | string \\\\| Date         | -      | 相应 mode 的最小时间                                                 |\\r\\n| max          | string \\\\| Date         | -      | 相应 mode 的最大时间                                                 |\\r\\n| minuteStep   | number                 | 1      | 分钟间隔                                                             |\\r\\n| disabled     | boolean                | false  | 是否禁用                                                             |\\r\\n| onChange     | (value?: Date) => void | -      | 值变化时触发的回调函数                                               |\\r\\n\\r\\n### 仅 DatePicker & DateSelect 支持的属性\\r\\n\\r\\n| 属性              | 类型                                 | 默认值        | 说明                                           |\\r\\n| :---------------- | :----------------------------------- | :------------ | :--------------------------------------------- |\\r\\n| visible           | boolean                              | false         | 是否展示                                       |\\r\\n| title             | string                               | '请选择'      | 选择器标题                                     |\\r\\n| cancelText        | string                               | '取消'        | 取消栏文字                                     |\\r\\n| okText            | string                               | '确定'        | 确定栏文字                                     |\\r\\n| maskClosable      | boolean                              | true          | 是否点击遮罩层时关闭，需要和 onCancel 一起使用 |\\r\\n| wheelDefaultValue | string \\\\| Date                       | -             | 滚轮默认停留的日期位置                         |\\r\\n| onOk              | (value?: Date) => void               | -             | 点击确定时触发的回调函数                       |\\r\\n| onCancel          | () => void                           | -             | 点击取消时触发的回调函数                       |\\r\\n| mountContainer    | HTMLElement &#124; () => HTMLElement | document.body | 指定 DatePicker 挂载的 HTML 节点               |\\r\\n\\r\\n### 仅 DateSelect 支持的属性\\r\\n\\r\\n| 属性        | 类型    | 默认值   | 说明                                                                                                 |\\r\\n| :---------- | :------ | :------- | :--------------------------------------------------------------------------------------------------- |\\r\\n| placeholder | string  | '请选择' | 输入提示信息                                                                                         |\\r\\n| hasArrow    | boolean | true     | 是否显示箭头                                                                                         |\\r\\n| format      | string  | -        | 格式化显示值。例：format=\\\"yyyy 年 MM 月 dd 日\\\"<br /> 年:`yyyy`, 月:`MM`, 日:`dd`, 时:`hh`, 分:`mm`。 |\\r\\n\";"],"sourceRoot":""}