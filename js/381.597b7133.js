(self.webpackChunksite=self.webpackChunksite||[]).push([[381],{90381:function(n,r,e){"use strict";e.r(r),r.default='# Input 文本框\r\n\r\n## 基本用法\r\n\r\n```jsx\r\nimport { useState } from \'react\';\r\nimport { Input, Cell } from \'zson-mobile\';\r\n\r\nconst Demo = () => {\r\n  const [title, setTitle] = useState(\'\');\r\n  const [content, setContent] = useState(\'\');\r\n\r\n  return (\r\n    <>\r\n      <Cell title="单行文本">\r\n        <Input\r\n          clearable\r\n          type="text"\r\n          placeholder="请输入"\r\n          value={title}\r\n          onChange={(value) => {\r\n            setTitle(value);\r\n            console.log(`onChange: ${value}`);\r\n          }}\r\n          onBlur={(value) => console.log(`onBlur: ${value}`)}\r\n        />\r\n      </Cell>\r\n      <Cell title="多行文本">\r\n        <Input rows={3} type="text" placeholder="请输入" value={content} onChange={setContent} />\r\n      </Cell>\r\n    </>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Demo />, mountNode);\r\n```\r\n\r\n## 输入类型\r\n\r\n```jsx\r\nimport { useState, useRef } from \'react\';\r\nimport { Input, Cell, Button } from \'zson-mobile\';\r\n\r\nconst Demo = () => {\r\n  const focusInput = useRef();\r\n  const [value, setValue] = useState(\'\');\r\n\r\n  return (\r\n    <>\r\n      <Cell title="数字">\r\n        <Input\r\n          ref={focusInput}\r\n          type="number"\r\n          placeholder="type is number"\r\n          value={value}\r\n          onChange={setValue}\r\n        />\r\n      </Cell>\r\n\r\n      <Cell title="金额">\r\n        <Input type="price" placeholder="type is price" defaultValue={value} />\r\n      </Cell>\r\n\r\n      <Cell title="身份证">\r\n        <Input type="idcard" placeholder="type is idcard" />\r\n      </Cell>\r\n\r\n      <Cell>\r\n        <Button size="xs" theme="primary" onClick={() => focusInput.current.focus()}>\r\n          click to focus the first input\r\n        </Button>\r\n      </Cell>\r\n    </>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Demo />, mountNode);\r\n```\r\n\r\n## 只读 / 禁用状态\r\n\r\n```jsx\r\nimport { Input, Cell } from \'zson-mobile\';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <Cell title="单行文本">\r\n      <Input readOnly type="text" defaultValue="我是只读状态" />\r\n    </Cell>\r\n    <Cell title="单行文本">\r\n      <Input disabled type="text" value="我是禁用状态" />\r\n    </Cell>\r\n    <Cell title="多行文本">\r\n      <Input\r\n        readOnly\r\n        type="text"\r\n        rows={3}\r\n        value="我是只读状态，我是只读状态，我是只读状态，我是只读状态。"\r\n      />\r\n    </Cell>\r\n    <Cell title="多行文本">\r\n      <Input\r\n        disabled\r\n        type="text"\r\n        rows={3}\r\n        value="我是禁用状态，我是禁用状态，我是禁用状态，我是禁用状态。"\r\n      />\r\n    </Cell>\r\n  </>,\r\n  mountNode,\r\n);\r\n```\r\n\r\n## 无标签栏\r\n\r\n```jsx\r\nimport { Input, Cell } from \'zson-mobile\';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <Cell>\r\n      <Input type="text" placeholder="标题" />\r\n    </Cell>\r\n    <Cell>\r\n      <Input autoHeight type="text" rows={4} maxLength={200} placeholder="摘要" />\r\n    </Cell>\r\n  </>,\r\n  mountNode,\r\n);\r\n```\r\n\r\n## 高度自适应\r\n\r\n```jsx\r\nimport { useState } from \'react\';\r\nimport { Input, Cell } from \'zson-mobile\';\r\n\r\nconst Demo = () => {\r\n  const [value, setValue] = useState(\'\');\r\n\r\n  return (\r\n    <Cell title="多行文本">\r\n      <Input\r\n        autoHeight\r\n        type="text"\r\n        rows={3}\r\n        placeholder="请输入"\r\n        value={value}\r\n        onChange={setValue}\r\n      />\r\n    </Cell>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Demo />, mountNode);\r\n```\r\n\r\n## 显示输入字数\r\n\r\n```jsx\r\nimport { useState } from \'react\';\r\nimport { Input, Cell } from \'zson-mobile\';\r\n\r\nconst Demo = () => {\r\n  const [value, setValue] = useState(\'\');\r\n\r\n  return (\r\n    <Cell title="多行文本">\r\n      <Input\r\n        autoHeight\r\n        showLength\r\n        maxLength={200}\r\n        type="text"\r\n        rows={3}\r\n        placeholder="请输入"\r\n        value={value}\r\n        onChange={setValue}\r\n      />\r\n    </Cell>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Demo />, mountNode);\r\n```\r\n\r\n## API\r\n\r\n| 属性         | 类型                               | 默认值 | 说明                                                                                                                    |\r\n| :----------- | :--------------------------------- | :----- | :---------------------------------------------------------------------------------------------------------------------- |\r\n| type         | string                             | \'text\' | 类型，可选值 `text`、`number`、`idcard`、`price`、`password`、`search`                                                  |\r\n| value        | number \\| string                   | -      | 值                                                                                                                      |\r\n| defaultValue | number \\| string                   | -      | 初始值                                                                                                                  |\r\n| disabled     | boolean                            | false  | 是否禁用                                                                                                                |\r\n| readOnly     | boolean                            | false  | 是否只读                                                                                                                |\r\n| rows         | number                             | -      | 多行文本时的显示行数。type 为 text 类型时有效。                                                                         |\r\n| autoHeight   | boolean                            | false  | 是否高度自适应                                                                                                          |\r\n| maxLength    | number                             | -      | 输入字数上限                                                                                                            |\r\n| showLength   | boolean                            | false  | 是否显示输入字数。多行文本（type="text"且包含 rows 属性）时有效。                                                       |\r\n| clearable    | boolean                            | true   | 是否显示清除按钮。多行文本（type="text"且包含 rows 属性）时无效。必须为受控组件（属性包含 value、onChange）时方可生效。 |\r\n| onChange     | (value?: number \\| string) => void | -      | 值变化时触发的回调函数                                                                                                  |\r\n'}}]);